/*
 * Copyright (c) 2016 deltaDNA Ltd. All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 23
    buildToolsVersion = '23.0.2'
    
    minSdkVersion    = 9
    targetSdkVersion = 23
    
    sourceCompatibilityVersion = JavaVersion.VERSION_1_6
    targetCompatibilityVersion = JavaVersion.VERSION_1_6
    
    supportVersion = '23.2.1'
    
    kotlinVersion = '1.0.1'
    
    logTagName  = 'LOG_TAG'
    logTagValue = 'deltaDNA'
}

def getSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}
